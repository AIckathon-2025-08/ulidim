# Multi-stage Dockerfile for Frontend
# Stage 1: Base image with dependencies
FROM node:20-alpine AS base
WORKDIR /app
COPY package*.json ./

# Stage 2: Development dependencies
FROM base AS dev-deps
RUN npm ci --include=dev && npm cache clean --force

# Stage 3: Production dependencies only
FROM base AS prod-deps
RUN npm ci --only=production && npm cache clean --force

# Stage 4: Build stage for production
FROM dev-deps AS builder
COPY . .
# Remove server directory
RUN rm -rf server/
# Build the application
RUN npm run build

# Stage 5: Production stage (minimal size)
FROM node:20-alpine AS production
WORKDIR /app

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy only production dependencies
COPY --from=prod-deps --chown=nodejs:nodejs /app/node_modules ./node_modules

# Copy built application and source files
COPY --from=builder --chown=nodejs:nodejs /app .

# Create necessary directories and set permissions
RUN mkdir -p /app/dist /app/logs && \
    chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/ || exit 1

# Expose port
EXPOSE 3000

# Start the application
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]
